
pip install qiskit qiskit-aer

# Blood Donorâ€“Patient Matching using Grover's Algorithm
# Simple and understandable for beginners
# Author: Your Hackathon Team

from qiskit import QuantumCircuit
from qiskit_aer import AerSimulator
from qiskit.visualization import plot_histogram
import matplotlib.pyplot as plt

# --------------------------
# Step 1: Define donors
# --------------------------
# 2 qubits for donors (00, 01, 10, 11)
# Example: patient compatible with donors 01 and 10
compatible_donors = ['01', '10']

# --------------------------
# Step 2: Build Oracle
# --------------------------
# Marks compatible donors using X and Toffoli (CCX) gates
def grover_oracle():
    qc = QuantumCircuit(3)  # 2 donor qubits + 1 ancilla
    qc.x(2); qc.h(2)        # Prepare ancilla qubit

    # Mark donor 01
    qc.x(0)                 # flip q0 to control 0
    qc.ccx(0,1,2)           # Toffoli
    qc.x(0)                 # undo flip

    # Mark donor 10
    qc.x(1)
    qc.ccx(0,1,2)
    qc.x(1)

    qc.h(2); qc.x(2)        # reset ancilla
    return qc

# --------------------------
# Step 3: Build Diffusion
# --------------------------
# Amplifies probability of marked donors
def diffusion():
    qc = QuantumCircuit(3)
    qc.h([0,1])
    qc.x([0,1])
    qc.h(1); qc.ccx(0,1,2); qc.h(1)
    qc.x([0,1])
    qc.h([0,1])
    return qc

# --------------------------
# Step 4: Build full Grover circuit
# --------------------------
grover = QuantumCircuit(3,2)
grover.h([0,1])               # Superposition
grover.compose(grover_oracle(), inplace=True)  # Oracle
grover.compose(diffusion(), inplace=True)      # Diffusion
grover.measure([0,1],[0,1])   # Measure donors

# --------------------------
# Step 5: Show ASCII circuit
# --------------------------
print("Circuit Diagram (ASCII):")
print(grover.draw(output='text'))

# --------------------------
# Step 6: Run the simulation
# --------------------------
simulator = AerSimulator()
job = simulator.run(grover, shots=1024)
result = job.result()
counts = result.get_counts()

print("Feasible donors (Grover):", counts)

# --------------------------
# Step 7: Plot histogram
# --------------------------
plot_histogram(counts)
plt.show()
